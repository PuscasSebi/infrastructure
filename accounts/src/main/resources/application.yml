
server:
  port: 8080

spring:
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  application:
    name: accounts
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3307/accountsdb
    username: root
    password: 'root'
  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  config:
    import: "configserver:http://localhost:8071/"

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "easy bank account application"
    version: "1.0.0"

management:
    endpoints:
      web:
        exposure:
          include: "*"
    health:
      readiness-state:
        enabled: true
      liveness-state:
        enabled: true
    endpoint:
      metrics:
        access: unrestricted
      prometheus:
        access: unrestricted
      health:
        show-details: always
      shutdown:
        enabled: true
        health:
          probes:
            true
    info:
      env:
        enabled: true
    metrics:
      tags:
        application: ${spring.application.name}
    defaults:
      metrics:
        export:
          enabled: true
    prometheus:
      metrics:
        export:
          enabled: true
endpoints:
  shutdown:
    enabled: true

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 5
      permittedNumberOfCallsInHalfOpenState: 2
      failure-rate-threshold: 10
      automatic-transition-from-open-to-half-open-enabled: true
      minimum-number-of-calls: 2
      waitDurationInOpenState: 10000


resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1